#type vertex
#version 450

layout (std140) uniform CameraUniform
{
    mat4 ViewProj;
    vec3 Position;
    vec3 AimDirection;
} u_Camera;

uniform mat4 u_Transform;

layout(location = 0) in vec3 a_Position;
layout(location = 1) in vec2 a_TexCoord;

out vec2 v_TexCoord;

void main()
{
    v_TexCoord = a_TexCoord;
    gl_Position = u_Camera.ViewProj * u_Transform * vec4(a_Position, 1.0);
}


#type fragment
#version 450

uniform vec4 u_Color;
uniform sampler2D u_Texture;
uniform vec2 u_TexScale;

in vec2 v_TexCoord;

layout(location = 0) out vec4 o_Color;

void main()
{
    vec4 color = texture(u_Texture, v_TexCoord * u_TexScale) * u_Color;
    color.rgb = color.rgb * color.a; // Premultiplied alpha
    o_Color = color;
}
